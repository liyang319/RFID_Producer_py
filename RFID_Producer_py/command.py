# command.py
"""
指令定义模块
定义各种十六进制数组指令常量
"""

# RFID相关指令
CMD_RFID_QUERY = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x80, 0x00, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_RFID_READ = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x80, 0x01, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_RFID_WRITE = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x80, 0x02, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_RFID_STOP = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x80, 0x00, 0x64, 0xEE, 0x0D, 0x0B])
#
# # 生产控制指令
# CMD_PRODUCTION_START = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x81, 0x00, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_PRODUCTION_STOP = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x81, 0x01, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_PRODUCTION_EMERGENCY_STOP = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x81, 0x02, 0x64, 0xEE, 0x0D, 0x0A])
#
# # 设备状态查询指令
# CMD_DEVICE_STATUS_QUERY = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x82, 0x00, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_DEVICE_TEMPERATURE_QUERY = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x82, 0x01, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_DEVICE_VERSION_QUERY = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x82, 0x02, 0x64, 0xEE, 0x0D, 0x0A])
#
# # 系统控制指令
# CMD_SYSTEM_RESET = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x83, 0x00, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_SYSTEM_REBOOT = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x83, 0x01, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_SYSTEM_SHUTDOWN = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x83, 0x02, 0x64, 0xEE, 0x0D, 0x0A])
#
# # 数据管理指令
# CMD_DATA_CLEAR = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x84, 0x00, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_DATA_EXPORT = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x84, 0x01, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_DATA_BACKUP = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x84, 0x02, 0x64, 0xEE, 0x0D, 0x0A])
#
# # 测试指令
# CMD_SELF_TEST = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x85, 0x00, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_SENSOR_TEST = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x85, 0x01, 0x64, 0xEE, 0x0D, 0x0A])
# CMD_RFID_TEST = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x85, 0x02, 0x64, 0xEE, 0x0D, 0x0A])

CMD_RFID_LOOP_START = bytes([0xA5, 0x5A, 0x00, 0x0A, 0x82, 0x00, 0x00, 0x88, 0x0D, 0x0A])
CMD_RFID_LOOP_STOP = bytes([0xA5, 0x5A, 0x00, 0x08, 0x8C, 0x84, 0x0D, 0x0A])

CMD_ACK_TYPE_RFID_LOOP_START = 0x83
CMD_ACK_TYPE_RFID_LOOP_STOP = 0x8D

# 指令字典（可选，便于批量操作）
device_command = {
    'CMD_RFID_LOOP_START': CMD_RFID_LOOP_START,
    'CMD_RFID_LOOP_STOP': CMD_RFID_LOOP_STOP,
    'CMD_RFID_QUERY': CMD_RFID_QUERY
}

device_command_ack = {
    'CMD_ACK_TYPE_RFID_LOOP_START': CMD_ACK_TYPE_RFID_LOOP_START,
    'CMD_ACK_TYPE_RFID_LOOP_STOP': CMD_ACK_TYPE_RFID_LOOP_STOP
}

# 使用示例
# if __name__ == "__main__":
#     # 直接使用常量
#     print("RFID查询指令:", CMD_RFID_QUERY.hex().upper())
#
#     # 通过字典访问
#     print("开始生产指令:", device_command['PRODUCTION_START'].hex().upper())
#
#     # 显示所有指令
#     for name, cmd in device_command.items():
#         hex_str = ' '.join([f'{b:02X}' for b in cmd])
#         print(f"{name}: {hex_str}")